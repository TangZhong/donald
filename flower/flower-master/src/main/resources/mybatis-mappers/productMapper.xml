<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- T_PRODUCT -->
<mapper namespace="com.flower.dao.ProductDao">
    <!-- 结果映射 -->
    <resultMap id="productMap" type="com.flower.bean.Product">
        <id column="ID" property="id" jdbcType="INTEGER" />
        <result column="NAME" property="name" jdbcType="VARCHAR" />
        <result column="TYPE" property="type" jdbcType="VARCHAR" />
        <result column="IMAGE" property="image" jdbcType="VARCHAR" />
        <result column="PRICE" property="price" jdbcType="VARCHAR" />
        <result column="FREIGHT" property="freight" jdbcType="VARCHAR" />
        <result column="SOLD" property="sold" jdbcType="INTEGER" />
        <result column="EXTRA" property="extra" jdbcType="VARCHAR" />
        <result column="INTRODUCE" property="introduce" jdbcType="VARCHAR" />
        <result column="STATUS" property="status" jdbcType="VARCHAR" />
        <result column="INVENTORY" property="inventory" jdbcType="INTEGER" />
    </resultMap>
    
    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, NAME, TYPE, IMAGE, PRICE, FREIGHT, 
        SOLD, EXTRA, INTRODUCE, STATUS, INVENTORY
    </sql>
    
    <!-- 查询所有数据 -->
    <select id="findProductAll" resultMap="productMap">
        SELECT
        <include refid="allColumns" />
        FROM T_PRODUCT
    </select>
    
    <!-- 根据条件查询数据 -->
    <select id="findProductByCondition" resultMap="productMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM T_PRODUCT WHERE 1 = 1
        <if test="name != null and name != ''">
            AND NAME LIKE CONCAT('%',#{name},'%')
        </if>
        <if test="type != null">
            AND TYPE = #{type}
        </if>
        <if test="image != null and image != ''">
            AND IMAGE LIKE CONCAT('%',#{image},'%')
        </if>
        <if test="price != null">
            AND PRICE = #{price}
        </if>
        <if test="freight != null">
            AND FREIGHT = #{freight}
        </if>
        <if test="sold != null">
            AND SOLD = #{sold}
        </if>
        <if test="extra != null and extra != ''">
            AND EXTRA LIKE CONCAT('%',#{extra},'%')
        </if>
        <if test="introduce != null and introduce != ''">
            AND INTRODUCE LIKE CONCAT('%',#{introduce},'%')
        </if>
        <if test="status != null">
            AND STATUS = #{status}
        </if>
        <if test="inventory != null">
            AND INVENTORY = #{inventory}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findProductByIds" resultMap="productMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM T_PRODUCT WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="findProductById" resultMap="productMap">
        SELECT
        <include refid="allColumns" />
        FROM T_PRODUCT WHERE ID = #{productId}
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertProduct" parameterType="map">
        INSERT INTO T_PRODUCT (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{name},
            #{type},
            #{image},
            #{price},
            #{freight},
            #{sold},
            #{extra},
            #{introduce},
            #{status},
            #{inventory}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertProducts" parameterType="list">
        INSERT INTO T_PRODUCT (<include refid="allColumns" />)
        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.name},
                #{item.type},
                #{item.image},
                #{item.price},
                #{item.freight},
                #{item.sold},
                #{item.extra},
                #{item.introduce},
                #{item.status},
                #{item.inventory}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateProduct" parameterType="map">
        UPDATE T_PRODUCT
        <set>
            <if test="name != null">NAME = #{name},</if>
            <if test="type != null">TYPE = #{type},</if>
            <if test="image != null">IMAGE = #{image},</if>
            <if test="price != null">PRICE = #{price},</if>
            <if test="freight != null">FREIGHT = #{freight},</if>
            <if test="sold != null">SOLD = #{sold},</if>
            <if test="extra != null">EXTRA = #{extra},</if>
            <if test="introduce != null">INTRODUCE = #{introduce},</if>
            <if test="status != null">STATUS = #{status},</if>
            <if test="inventory != null">INVENTORY = #{inventory}</if>
        </set>
        WHERE ID = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateProducts" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE T_PRODUCT
            <set>
                <if test="name != null">NAME = #{item.name},</if>
                <if test="type != null">TYPE = #{item.type},</if>
                <if test="image != null">IMAGE = #{item.image},</if>
                <if test="price != null">PRICE = #{item.price},</if>
                <if test="freight != null">FREIGHT = #{item.freight},</if>
                <if test="sold != null">SOLD = #{item.sold},</if>
                <if test="extra != null">EXTRA = #{item.extra},</if>
                <if test="introduce != null">INTRODUCE = #{item.introduce},</if>
                <if test="status != null">STATUS = #{item.status},</if>
                <if test="inventory != null">INVENTORY = #{item.inventory}</if>
            </set>
            WHERE ID = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteProductById" parameterType="INTEGER">
        DELETE FROM T_PRODUCT WHERE ID = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteProductByIds" parameterType="list">
        DELETE FROM T_PRODUCT WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>