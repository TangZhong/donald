<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- T_SHOPCAR -->
<mapper namespace="com.flower.dao.ShopCarDao">
    <!-- 结果映射 -->
    <resultMap id="shopCarMap" type="ShopCar">
        <id column="ID" property="id" jdbcType="INTEGER" />
        <result column="productId" property="productId" jdbcType="INTEGER" />
        <result column="userId" property="userId" jdbcType="INTEGER" />
        <result column="NUMBER" property="number" jdbcType="INTEGER" />
        <result column="SELECTED" property="selected" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="shopCarDtoMap" type="ShopCarDto">
        <id column="ID" property="id" jdbcType="INTEGER" />
        <result column="productId" property="productId" jdbcType="INTEGER" />
        <result column="userId" property="userId" jdbcType="INTEGER" />
        <result column="NUMBER" property="number" jdbcType="INTEGER" />
        <result column="SELECTED" property="selected" jdbcType="VARCHAR" />
        <result column="NAME" property="name" jdbcType="VARCHAR" />
        <result column="TYPE" property="type" jdbcType="VARCHAR" />
        <result column="IMAGE" property="image" jdbcType="VARCHAR" />
        <result column="PRICE" property="price" jdbcType="VARCHAR" />
        <result column="FREIGHT" property="freight" jdbcType="VARCHAR" />
        <result column="SOLD" property="sold" jdbcType="INTEGER" />
        <result column="EXTRA" property="extra" jdbcType="VARCHAR" />
        <result column="INTRODUCE" property="introduce" jdbcType="VARCHAR" />
        <result column="STATUS" property="status" jdbcType="VARCHAR" />
        <result column="INVENTORY" property="inventory" jdbcType="INTEGER" />
    </resultMap>

    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, productId, userId, NUMBER, SELECTED
    </sql>
    
    <!-- 查询所有数据 -->
    <!--连接产品表-->
    <select id="findShopCarAll" resultMap="shopCarDtoMap">
        SELECT
        T_SHOPCAR.id as ID, productId, userId, NUMBER, SELECTED,name,type,image,price,introduce
        FROM T_SHOPCAR, T_PRODUCT
        WHERE T_SHOPCAR.productId=T_PRODUCT.id
    </select>
    
    <!-- 根据条件查询数据 -->
    <select id="findShopCarByCondition" resultMap="shopCarMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM T_SHOPCAR WHERE 1 = 1
        <if test="productId != null">
            AND productId = #{productId}
        </if>
        <if test="userId != null">
            AND userId = #{userId}
        </if>
        <if test="number != null">
            AND NUMBER = #{number}
        </if>
        <if test="selected != null">
            AND SELECTED = #{selected}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findShopCarByUserIds" resultMap="shopCarDtoMap" parameterType="list">
        SELECT
        T_SHOPCAR.id as ID, productId, userId, NUMBER, SELECTED,name,type,image,price,introduce
        FROM T_SHOPCAR,T_PRODUCT
        WHERE T_SHOPCAR.userId IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND T_SHOPCAR.productId=T_PRODUCT.id
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertShopCar" parameterType="map">
        INSERT INTO T_SHOPCAR (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{productId},
            #{userId},
            #{number},
            #{selected}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertShopCars" parameterType="list">
        INSERT INTO T_SHOPCAR (<include refid="allColumns" />)
        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.productId},
                #{item.userId},
                #{item.number},
                #{item.selected}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateShopCar" parameterType="map">
        UPDATE T_SHOPCAR
        <set>
            <if test="productId != null">productId = #{productId},</if>
            <if test="userId != null">userId = #{userId},</if>
            <if test="number != null">NUMBER = #{number},</if>
            <if test="selected != null">SELECTED = #{selected}</if>
        </set>
        WHERE ID = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateShopCars" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE T_SHOPCAR
            <set>
                <if test="productId != null">productId = #{item.productId},</if>
                <if test="userId != null">userId = #{item.userId},</if>
                <if test="number != null">NUMBER = #{item.number},</if>
                <if test="selected != null">SELECTED = #{item.selected}</if>
            </set>
            WHERE ID = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteShopCarById" parameterType="INTEGER">
        DELETE FROM T_SHOPCAR WHERE ID = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteShopCarByIds" parameterType="list">
        DELETE FROM T_SHOPCAR WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>